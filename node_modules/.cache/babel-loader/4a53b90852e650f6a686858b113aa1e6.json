{"ast":null,"code":"function GenStateV(key) {\n  let S = [];\n  let T = [];\n  for (let i = 0; i < 256; i++) {\n    S[i] = i;\n    T[i] = key.charCodeAt(i % key.length);\n  }\n  let j = 0;\n  for (let i = 0; i < 256; i++) {\n    j = (j + S[i] + T[i]) % 256;\n    [S[i], S[j]] = [S[j], S[i]];\n  }\n  return S;\n}\nfunction Encryption(S, textLength) {\n  let i = 0,\n    j = 0;\n  let keystream = [];\n  for (let n = 0; n < textLength; n++) {\n    i = (i + 1) % 256;\n    j = (j + S[i]) % 256;\n    [S[i], S[j]] = [S[j], S[i]];\n    let t = S[(S[i] + S[j]) % 256];\n    keystream.push(t);\n  }\n  return keystream;\n}\nexport function rc4Encrypt(plaintext, key) {\n  const S = GenStateV(key);\n  const keystream = Encryption(S, plaintext.length);\n  let ciphertext = '';\n  for (let i = 0; i < plaintext.length; i++) {\n    const ptByte = plaintext.charCodeAt(i);\n    const keyByte = keystream[i];\n    const ctByte = ptByte ^ keyByte;\n    ciphertext += String.fromCharCode(ctByte);\n  }\n  return {\n    ciphertext,\n    keystream\n  };\n}\nexport function rc4Decrypt(ciphertext, key) {\n  // RC4 decryption is symmetric, same function as encryption\n  return rc4Encrypt(ciphertext, key);\n}","map":{"version":3,"names":["GenStateV","key","S","T","i","charCodeAt","length","j","Encryption","textLength","keystream","n","t","push","rc4Encrypt","plaintext","ciphertext","ptByte","keyByte","ctByte","String","fromCharCode","rc4Decrypt"],"sources":["C:/Users/Ahmed Sehly/Downloads/cipherPlain-main/cipherPlain-main/src/algorithms/rc4.js"],"sourcesContent":["function GenStateV(key) {\n    let S = [];\n    let T = [];\n\n    for (let i = 0; i < 256; i++) {\n        S[i] = i;\n        T[i] = key.charCodeAt(i % key.length);\n    }\n\n    let j = 0;\n    for (let i = 0; i < 256; i++) {\n        j = (j + S[i] + T[i]) % 256;\n        [S[i], S[j]] = [S[j], S[i]];\n    }\n\n    return S;\n}\n\nfunction Encryption(S, textLength) {\n    let i = 0, j = 0;\n    let keystream = [];\n\n    for (let n = 0; n < textLength; n++) {\n        i = (i + 1) % 256;\n        j = (j + S[i]) % 256;\n\n        [S[i], S[j]] = [S[j], S[i]];\n\n        let t = S[(S[i] + S[j]) % 256];\n        keystream.push(t);\n    }\n\n    return keystream;\n}\n\nexport function rc4Encrypt(plaintext, key) {\n    const S = GenStateV(key);\n    const keystream = Encryption(S, plaintext.length);\n    let ciphertext = '';\n\n    for (let i = 0; i < plaintext.length; i++) {\n        const ptByte = plaintext.charCodeAt(i);\n        const keyByte = keystream[i];\n        const ctByte = ptByte ^ keyByte;\n        ciphertext += String.fromCharCode(ctByte);\n    }\n\n    return { ciphertext, keystream };\n}\n\nexport function rc4Decrypt(ciphertext, key) {\n    // RC4 decryption is symmetric, same function as encryption\n    return rc4Encrypt(ciphertext, key);\n}\n"],"mappings":"AAAA,SAASA,SAASA,CAACC,GAAG,EAAE;EACpB,IAAIC,CAAC,GAAG,EAAE;EACV,IAAIC,CAAC,GAAG,EAAE;EAEV,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;IAC1BF,CAAC,CAACE,CAAC,CAAC,GAAGA,CAAC;IACRD,CAAC,CAACC,CAAC,CAAC,GAAGH,GAAG,CAACI,UAAU,CAACD,CAAC,GAAGH,GAAG,CAACK,MAAM,CAAC;EACzC;EAEA,IAAIC,CAAC,GAAG,CAAC;EACT,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;IAC1BG,CAAC,GAAG,CAACA,CAAC,GAAGL,CAAC,CAACE,CAAC,CAAC,GAAGD,CAAC,CAACC,CAAC,CAAC,IAAI,GAAG;IAC3B,CAACF,CAAC,CAACE,CAAC,CAAC,EAAEF,CAAC,CAACK,CAAC,CAAC,CAAC,GAAG,CAACL,CAAC,CAACK,CAAC,CAAC,EAAEL,CAAC,CAACE,CAAC,CAAC,CAAC;EAC/B;EAEA,OAAOF,CAAC;AACZ;AAEA,SAASM,UAAUA,CAACN,CAAC,EAAEO,UAAU,EAAE;EAC/B,IAAIL,CAAC,GAAG,CAAC;IAAEG,CAAC,GAAG,CAAC;EAChB,IAAIG,SAAS,GAAG,EAAE;EAElB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,EAAEE,CAAC,EAAE,EAAE;IACjCP,CAAC,GAAG,CAACA,CAAC,GAAG,CAAC,IAAI,GAAG;IACjBG,CAAC,GAAG,CAACA,CAAC,GAAGL,CAAC,CAACE,CAAC,CAAC,IAAI,GAAG;IAEpB,CAACF,CAAC,CAACE,CAAC,CAAC,EAAEF,CAAC,CAACK,CAAC,CAAC,CAAC,GAAG,CAACL,CAAC,CAACK,CAAC,CAAC,EAAEL,CAAC,CAACE,CAAC,CAAC,CAAC;IAE3B,IAAIQ,CAAC,GAAGV,CAAC,CAAC,CAACA,CAAC,CAACE,CAAC,CAAC,GAAGF,CAAC,CAACK,CAAC,CAAC,IAAI,GAAG,CAAC;IAC9BG,SAAS,CAACG,IAAI,CAACD,CAAC,CAAC;EACrB;EAEA,OAAOF,SAAS;AACpB;AAEA,OAAO,SAASI,UAAUA,CAACC,SAAS,EAAEd,GAAG,EAAE;EACvC,MAAMC,CAAC,GAAGF,SAAS,CAACC,GAAG,CAAC;EACxB,MAAMS,SAAS,GAAGF,UAAU,CAACN,CAAC,EAAEa,SAAS,CAACT,MAAM,CAAC;EACjD,IAAIU,UAAU,GAAG,EAAE;EAEnB,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,SAAS,CAACT,MAAM,EAAEF,CAAC,EAAE,EAAE;IACvC,MAAMa,MAAM,GAAGF,SAAS,CAACV,UAAU,CAACD,CAAC,CAAC;IACtC,MAAMc,OAAO,GAAGR,SAAS,CAACN,CAAC,CAAC;IAC5B,MAAMe,MAAM,GAAGF,MAAM,GAAGC,OAAO;IAC/BF,UAAU,IAAII,MAAM,CAACC,YAAY,CAACF,MAAM,CAAC;EAC7C;EAEA,OAAO;IAAEH,UAAU;IAAEN;EAAU,CAAC;AACpC;AAEA,OAAO,SAASY,UAAUA,CAACN,UAAU,EAAEf,GAAG,EAAE;EACxC;EACA,OAAOa,UAAU,CAACE,UAAU,EAAEf,GAAG,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module"}