{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed Sehly\\\\Downloads\\\\cipherPlain-main\\\\cipherPlain-main\\\\src\\\\components\\\\CipherForm.js\";\nimport React, { useState } from \"react\";\nimport { TextField, Button, Box, Typography, Paper, Radio, RadioGroup, FormControl, FormControlLabel, Grid, Grow, Stepper, Step, StepLabel } from \"@mui/material\";\nimport { encrypt as aesEncrypt, decrypt as aesDecrypt, byteArrayToHexString, hexStringToByteArray } from \"../algorithms/AES/aes\";\nfunction CipherForm() {\n  const [key, setKey] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [mode, setMode] = useState(\"encrypt\");\n  const [steps, setSteps] = useState([]);\n  const [activeStep, setActiveStep] = useState(0);\n  const bitSize = 128;\n  const isHexString = str => {\n    const hexRegEx = /^[0-9a-fA-F]+$/;\n    return hexRegEx.test(str.replace(/\\s+/g, \"\"));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!text || !key) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n    let inputText = text.trim();\n    let flag = false;\n    if (!isHexString(inputText)) {\n      flag = true;\n      inputText = stringToHex(inputText);\n    }\n    let inputKey = key.trim();\n    if (!isHexString(inputKey)) {\n      inputKey = stringToHex(inputKey);\n    }\n    let output;\n    if (mode === \"encrypt\") {\n      const result = aesEncrypt(inputText, inputKey);\n      output = result.ciphertext;\n      setSteps(result.steps);\n      setActiveStep(0);\n    } else {\n      output = aesDecrypt(inputText, inputKey);\n    }\n    if (flag) {\n      setResult(hexToString(output));\n    } else {\n      setResult(output);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      p: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, steps.length > 0 && /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    sx: {\n      mt: 4,\n      p: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: activeStep,\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, steps.map((step, index) => /*#__PURE__*/React.createElement(Step, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, step.title), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, step.state.map((row, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, row.map((cell, j) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    key: j,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      p: 2,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 31\n    }\n  }, cell.toString(16).padStart(2, \"0\")))))))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    sx: {\n      mt: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, step.description))))), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mt: 2,\n      display: \"flex\",\n      justifyContent: \"center\",\n      gap: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: () => setActiveStep(prev => prev - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === steps.length - 1,\n    onClick: () => setActiveStep(prev => prev + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Next\"))));\n}\nexport default CipherForm;","map":{"version":3,"names":["React","useState","TextField","Button","Box","Typography","Paper","Radio","RadioGroup","FormControl","FormControlLabel","Grid","Grow","Stepper","Step","StepLabel","encrypt","aesEncrypt","decrypt","aesDecrypt","byteArrayToHexString","hexStringToByteArray","CipherForm","key","setKey","text","setText","result","setResult","mode","setMode","steps","setSteps","activeStep","setActiveStep","bitSize","isHexString","str","hexRegEx","test","replace","handleSubmit","e","preventDefault","alert","inputText","trim","flag","stringToHex","inputKey","output","ciphertext","hexToString","createElement","component","onSubmit","sx","p","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","elevation","mt","orientation","map","step","index","variant","title","container","spacing","state","row","i","item","xs","cell","j","textAlign","toString","padStart","description","display","justifyContent","gap","disabled","onClick","prev"],"sources":["C:/Users/Ahmed Sehly/Downloads/cipherPlain-main/cipherPlain-main/src/components/CipherForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TextField,\n  Button,\n  Box,\n  Typography,\n  Paper,\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Grow,\n  Stepper,\n  Step,\n  StepLabel,\n} from \"@mui/material\";\nimport {\n  encrypt as aesEncrypt,\n  decrypt as aesDecrypt,\n  byteArrayToHexString,\n  hexStringToByteArray,\n} from \"../algorithms/AES/aes\";\n\nfunction CipherForm() {\n  const [key, setKey] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [mode, setMode] = useState(\"encrypt\");\n  const [steps, setSteps] = useState([]);\n  const [activeStep, setActiveStep] = useState(0);\n  const bitSize = 128;\n\n  const isHexString = (str) => {\n    const hexRegEx = /^[0-9a-fA-F]+$/;\n    return hexRegEx.test(str.replace(/\\s+/g, \"\"));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!text || !key) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n\n    let inputText = text.trim();\n    let flag = false;\n    if (!isHexString(inputText)) {\n      flag = true;\n      inputText = stringToHex(inputText);\n    }\n\n    let inputKey = key.trim();\n    if (!isHexString(inputKey)) {\n      inputKey = stringToHex(inputKey);\n    }\n\n    let output;\n    if (mode === \"encrypt\") {\n      const result = aesEncrypt(inputText, inputKey);\n      output = result.ciphertext;\n      setSteps(result.steps);\n      setActiveStep(0);\n    } else {\n      output = aesDecrypt(inputText, inputKey);\n    }\n\n    if (flag) {\n      setResult(hexToString(output));\n    } else {\n      setResult(output);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 3 }}>\n      {/* Existing form fields */}\n\n      {steps.length > 0 && (\n        <Paper elevation={3} sx={{ mt: 4, p: 3 }}>\n          <Stepper activeStep={activeStep} orientation=\"vertical\">\n            {steps.map((step, index) => (\n              <Step key={index}>\n                <StepLabel>\n                  <Typography variant=\"h6\">{step.title}</Typography>\n                  <Grid container spacing={1}>\n                    {step.state.map((row, i) => (\n                      <Grid item xs={12} key={i}>\n                        <Grid container spacing={1}>\n                          {row.map((cell, j) => (\n                            <Grid item xs={3} key={j}>\n                              <Paper sx={{ p: 2, textAlign: \"center\" }}>\n                                {cell.toString(16).padStart(2, \"0\")}\n                              </Paper>\n                            </Grid>\n                          ))}\n                        </Grid>\n                      </Grid>\n                    ))}\n                  </Grid>\n                  <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                    {step.description}\n                  </Typography>\n                </StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <Box\n            sx={{ mt: 2, display: \"flex\", justifyContent: \"center\", gap: 2 }}\n          >\n            <Button\n              disabled={activeStep === 0}\n              onClick={() => setActiveStep((prev) => prev - 1)}\n            >\n              Back\n            </Button>\n            <Button\n              disabled={activeStep === steps.length - 1}\n              onClick={() => setActiveStep((prev) => prev + 1)}\n            >\n              Next\n            </Button>\n          </Box>\n        </Paper>\n      )}\n    </Box>\n  );\n}\n\nexport default CipherForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}